function test_cl1
    M = sym('M',[5,5],'real');
    for i = 1:5
        for j = i+1:5
            M(j,i) = M(i,j);
        end
    end
    syms x real;
    char = det(M - x.*eye(5));
    cc = coeffs(char,x);
    
end




% 
% M1_1*x^4 + M2_2*x^4 + M3_3*x^4 + M4_4*x^4 + M5_5*x^4 
% - x^5 
% + M1_2^2*x^3 + M1_3^2*x^3 + M1_4^2*x^3 + M1_5^2*x^3 + M2_3^2*x^3 + M2_4^2*x^3 + M2_5^2*x^3 + M3_4^2*x^3 + M3_5^2*x^3 + M4_5^2*x^3 
% 
% + M1_1*M2_4^2*M3_5^2 + M1_1*M2_5^2*M3_4^2 + M1_4^2*M2_2*M3_5^2 + M1_5^2*M2_2*M3_4^2 + M1_4^2*M2_5^2*M3_3 + M1_5^2*M2_4^2*M3_3 + M1_1*M2_3^2*M4_5^2 + M1_3^2*M2_2*M4_5^2 + M1_3^2*M2_5^2*M4_4 + M1_5^2*M2_3^2*M4_4 + M1_2^2*M3_3*M4_5^2 + M1_2^2*M3_5^2*M4_4 + M1_3^2*M2_4^2*M5_5 + M1_4^2*M2_3^2*M5_5 + M1_2^2*M3_4^2*M5_5 
% 
% 
% - M1_3^2*M2_4^2*x - M1_4^2*M2_3^2*x 
% - M1_3^2*M2_5^2*x - M1_5^2*M2_3^2*x - M1_4^2*M2_5^2*x - M1_5^2*M2_4^2*x
% - M1_2^2*M3_4^2*x - M1_2^2*M3_5^2*x
% - M1_4^2*M3_5^2*x - M1_5^2*M3_4^2*x
% - M1_2^2*M4_5^2*x
% - M1_3^2*M4_5^2*x
% - M2_4^2*M3_5^2*x - M2_5^2*M3_4^2*x
% - M2_3^2*M4_5^2*x
% + M1_1*M2_2*M3_4^2*x + M1_1*M2_2*M3_5^2*x + M1_1*M2_4^2*M3_3*x + M1_1*M2_5^2*M3_3*x + M1_4^2*M2_2*M3_3*x + M1_5^2*M2_2*M3_3*x 
% 
% 
% - M1_5^2*M2_2*x^2 
% - M1_1*M2_3^2*x^2 - M1_1*M2_4^2*x^2 - M1_3^2*M2_2*x^2 - M1_1*M2_5^2*x^2 - M1_4^2*M2_2*x^2 
% - M1_1*M3_4^2*x^2 - M1_2^2*M3_3*x^2 - M1_1*M3_5^2*x^2 - M1_4^2*M3_3*x^2 - M1_5^2*M3_3*x^2  
% - M1_1*M4_5^2*x^2 - M2_2*M3_4^2*x^2 - M1_2^2*M4_4*x^2 - M2_2*M3_5^2*x^2 - M1_3^2*M4_4*x^2 
% - M2_4^2*M3_3*x^2 - M2_5^2*M3_3*x^2 - M1_5^2*M4_4*x^2 - M2_2*M4_5^2*x^2 - M1_2^2*M5_5*x^2 
% - M2_3^2*M4_4*x^2 - M1_3^2*M5_5*x^2 - M1_4^2*M5_5*x^2 - M2_5^2*M4_4*x^2 - M3_3*M4_5^2*x^2 
% - M2_3^2*M5_5*x^2 - M2_4^2*M5_5*x^2 - M3_5^2*M4_4*x^2 - M3_4^2*M5_5*x^2 
% 
% - M1_1*M2_2*x^3 - M1_1*M3_3*x^3 - M1_1*M4_4*x^3 - M2_2*M3_3*x^3 - M1_1*M5_5*x^3 - M2_2*M4_4*x^3 - M2_2*M5_5*x^3 - M3_3*M4_4*x^3 - M3_3*M5_5*x^3
% - M4_4*M5_5*x^3 
% 
% + 2*M1_2*M1_3*M2_3*x^2 + 2*M1_2*M1_4*M2_4*x^2 + 2*M1_2*M1_5*M2_5*x^2 + 2*M1_3*M1_4*M3_4*x^2 + 2*M1_3*M1_5*M3_5*x^2 + M1_1*M2_2*M3_3*x^2 
% 
% + 2*M1_4*M1_5*M4_5*x^2 + M1_1*M2_2*M4_4*x^2 
% 
% + M1_1*M2_2*M4_5^2*x + M1_1*M2_3^2*M4_4*x + M1_3^2*M2_2*M4_4*x + M1_1*M2_5^2*M4_4*x + M1_5^2*M2_2*M4_4*x + M1_1*M3_3*M4_5^2*x+ M1_1*M2_3^2*M5_5*x
% 
% + 2*M2_3*M2_4*M3_4*x^2 + 2*M2_3*M2_5*M3_5*x^2 + M1_1*M2_2*M5_5*x^2 + M1_1*M3_3*M4_4*x^2  
% 
% + M1_2^2*M3_3*M4_4*x + M1_1*M2_4^2*M5_5*x + M1_1*M3_5^2*M4_4*x + M1_3^2*M2_2*M5_5*x + M1_4^2*M2_2*M5_5*x + M1_5^2*M3_3*M4_4*x 
% 
% + 2*M2_4*M2_5*M4_5*x^2 + M1_1*M3_3*M5_5*x^2 + M2_2*M3_3*M4_4*x^2 
% 
% + M1_1*M3_4^2*M5_5*x + M2_2*M3_3*M4_5^2*x + M1_2^2*M3_3*M5_5*x + M2_2*M3_5^2*M4_4*x + M1_4^2*M3_3*M5_5*x + M2_5^2*M3_3*M4_4*x 
% 
% 
% + M1_1*M4_4*M5_5*x^2 + M2_2*M3_3*M5_5*x^2 
% 
% 
% + M2_2*M3_4^2*M5_5*x + M1_2^2*M4_4*M5_5*x + M1_3^2*M4_4*M5_5*x + M2_4^2*M3_3*M5_5*x + 2*M3_4*M3_5*M4_5*x^2 + M2_2*M4_4*M5_5*x^2 + M2_3^2*M4_4*M5_5*x + M3_3*M4_4*M5_5*x^2 - 2*M1_2*M1_4*M2_4*M3_5^2 - 2*M1_2*M1_5*M2_5*M3_4^2 - 2*M1_3*M1_4*M2_5^2*M3_4 - 2*M1_3*M1_5*M2_4^2*M3_5 - 2*M1_2*M1_3*M2_3*M4_5^2 - 2*M1_5^2*M2_3*M2_4*M3_4 - 2*M1_4*M1_5*M2_3^2*M4_5 - 2*M1_4^2*M2_3*M2_5*M3_5 - 2*M1_3^2*M2_4*M2_5*M4_5 - M1_1*M2_2*M3_3*M4_5^2 - M1_1*M2_2*M3_5^2*M4_4 - M1_1*M2_5^2*M3_3*M4_4 - M1_5^2*M2_2*M3_3*M4_4 - M1_1*M2_2*M3_4^2*M5_5 - M1_1*M2_4^2*M3_3*M5_5 - M1_4^2*M2_2*M3_3*M5_5 - 2*M1_2^2*M3_4*M3_5*M4_5 - M1_1*M2_3^2*M4_4*M5_5 -\\\n M1_3^2*M2_2*M4_4*M5_5 - M1_2^2*M3_3*M4_4*M5_5 + 2*M1_3*M1_4*M2_3*M2_4*x + 2*M1_3*M1_5*M2_3*M2_5*x + 2*M1_4*M1_5*M2_4*M2_5*x + 2*M1_2*M1_3*M2_4*M3_4*x + 2*M1_2*M1_4*M2_3*M3_4*x - 2*M1_2*M1_4*M2_4*M3_3*x - 2*M1_3*M1_4*M2_2*M3_4*x + 2*M1_2*M1_3*M2_5*M3_5*x + 2*M1_2*M1_5*M2_3*M3_5*x - 2*M1_2*M1_5*M2_5*M3_3*x - 2*M1_3*M1_5*M2_2*M3_5*x - 2*M1_1*M2_3*M2_4*M3_4*x - 2*M1_2*M1_3*M2_3*M4_4*x - 2*M1_1*M2_3*M2_5*M3_5*x + 2*M1_2*M1_4*M2_5*M4_5*x + 2*M1_2*M1_5*M2_4*M4_5*x - 2*M1_2*M1_5*M2_5*M4_4*x - 2*M1_4*M1_5*M2_2*M4_5*x + 2*M1_4*M1_5*M3_4*M3_5*x - 2*M1_2*M1_3*M2_3*M5_5*x - 2*M1_1*M2_4*M2_5*M4_5*x - 2*M1_2*M1_4*M2_4*M5_5*x + 2*M1_3*M1_4*M3_5*M4_5*x + 2*M1_3*M1_5*M3_4*M4_5*x - 2*M1_3*M1_5*M3_5*M4_4*x - 2*M1_4*M1_5*M3_3*M4_5*x - M1_1*M2_2*M3_3*M4_4*x - 2*M1_3*M1_4*M3_4*M5_5*x + 2*M2_4*M2_5*M3_4*M3_5*x - M1_1*M2_2*M3_3*M5_5*x - 2*M1_1*M3_4*M3_5*M4_5*x + 2*M2_3*M2_4*M3_5*M4_5*x + 2*M2_3*M2_5*M3_4*M4_5*x - 2*M2_3*M2_5*M3_5*M4_4*x - 2*M2_4*M2_5*M3_3*M4_5*x - M1_1*M2_2*M4_4*M5_5*x - 2*M2_2*M3_4*M3_5*M4_\\\n5*x - 2*M2_3*M2_4*M3_4*M5_5*x - M1_1*M3_3*M4_4*M5_5*x - M2_2*M3_3*M4_4*M5_5*x + 2*M1_3*M1_4*M2_4*M2_5*M3_5 + 2*M1_3*M1_5*M2_4*M2_5*M3_4 + 2*M1_4*M1_5*M2_3*M2_4*M3_5 + 2*M1_4*M1_5*M2_3*M2_5*M3_4 - 2*M1_4*M1_5*M2_4*M2_5*M3_3 + 2*M1_2*M1_4*M2_5*M3_4*M3_5 + 2*M1_2*M1_5*M2_4*M3_4*M3_5 + 2*M1_3*M1_4*M2_3*M2_5*M4_5 + 2*M1_3*M1_5*M2_3*M2_4*M4_5 - 2*M1_3*M1_5*M2_3*M2_5*M4_4 - 2*M1_4*M1_5*M2_2*M3_4*M3_5 - 2*M1_1*M2_4*M2_5*M3_4*M3_5 + 2*M1_2*M1_3*M2_4*M3_5*M4_5 + 2*M1_2*M1_3*M2_5*M3_4*M4_5 - 2*M1_2*M1_3*M2_5*M3_5*M4_4 + 2*M1_2*M1_4*M2_3*M3_5*M4_5 - 2*M1_2*M1_4*M2_5*M3_3*M4_5 + 2*M1_2*M1_5*M2_3*M3_4*M4_5 - 2*M1_2*M1_5*M2_3*M3_5*M4_4 - 2*M1_2*M1_5*M2_4*M3_3*M4_5 + 2*M1_2*M1_5*M2_5*M3_3*M4_4 - 2*M1_3*M1_4*M2_2*M3_5*M4_5 - 2*M1_3*M1_4*M2_3*M2_4*M5_5 - 2*M1_3*M1_5*M2_2*M3_4*M4_5 + 2*M1_3*M1_5*M2_2*M3_5*M4_4 + 2*M1_4*M1_5*M2_2*M3_3*M4_5 - 2*M1_1*M2_3*M2_4*M3_5*M4_5 - 2*M1_1*M2_3*M2_5*M3_4*M4_5 + 2*M1_1*M2_3*M2_5*M3_5*M4_4 + 2*M1_1*M2_4*M2_5*M3_3*M4_5 - 2*M1_2*M1_3*M2_4*M3_4*M5_5 - 2*M1_2*M1_4*M2_3*M3_\\\n4*M5_5 + 2*M1_2*M1_4*M2_4*M3_3*M5_5 + 2*M1_3*M1_4*M2_2*M3_4*M5_5 + 2*M1_1*M2_2*M3_4*M3_5*M4_5 + 2*M1_1*M2_3*M2_4*M3_4*M5_5 + 2*M1_2*M1_3*M2_3*M4_4*M5_5 + M1_1*M2_2*M3_3*M4_4*M5_5


function dev1()
    syms n11 n12 n13 n14 n15 real
        syms n21 n22 n23 n24 n25 real
        syms n31 n32 n33 n34 n35 real
        syms n41 n42 n43 n44 n45 real
        syms n51 n52 n53 n54 n55 real

        c11 = (n23*n45+n24*n35-n25*n34)^2-4*(n23*n45*n24*n35) + ...
            16-4*(n23^2+n24^2+n25^2+n34^2+n35^2+n45^2) + ...
            4*(n23*(n24*n34+n25*n35)+n45*(n24*n25+n34*n35));


        c12 = (n13*n45+n14*n35-n15*n34)^2-4*(n13*n45*n14*n35) + ...
            16-4*(n13^2+n14^2+n15^2+n34^2+n35^2+n45^2) + ...
            4*(n13*(n14*n34+n15*n35)+n45*(n14*n15+n34*n35));

        c13 = (n12*n45+n14*n25-n15*n24)^2-4*(n12*n45*n14*n25) + ...
            16-4*(n12^2+n14^2+n15^2+n24^2+n25^2+n45^2) + ...
            4*(n12*(n14*n24+n15*n25)+n45*(n14*n15+n24*n25));


        c14 = (n12*n35+n13*n25-n15*n23)^2-4*(n12*n35*n13*n25) + ...
            16-4*(n12^2+n13^2+n15^2+n23^2+n25^2+n35^2) + ...
            4*(n12*(n13*n23+n15*n25)+n35*(n13*n15+n23*n25));

        c15 = (n12*n34+n13*n24-n14*n23)^2-4*(n12*n34*n13*n24) + ...
            16-4*(n12^2+n13^2+n14^2+n23^2+n24^2+n34^2) + ...
            4*(n12*(n13*n23+n14*n24)+n34*(n13*n14+n23*n24));

        simplify(c11+c12+c13+c14+c15)


        c11 = (n23*n45+n24*n35-n25*n34)^2-4*(n23*n45*n24*n35) + ...
            16-4*(n23^2+n24^2+n25^2+n34^2+n35^2+n45^2) + ...
            4*(n23*(n24*n34+n25*n35)+n45*(n24*n25+n34*n35));



    % - 12*n12^2 - 12*n13^2- 12*n14^2- 12*n23^2- 12*n15^2- 12*n24^2- 12*n35^2 - 12*n45^2 - 12*n25^2- 12*n34^2
    % 
    % + 8*n12*n13*n23 
    % + 8*n12*n14*n24 
    % + 8*n12*n15*n25 
    % + 8*n13*n14*n34 
    % + 8*n13*n15*n35 
    % + 8*n14*n15*n45 
    % + 8*n23*n24*n34 
    % + 8*n23*n25*n35 
    % + 8*n24*n25*n45 
    % + 8*n34*n35*n45 

    % n12^2*n34^2 + n12^2*n35^2 + n12^2*n45^2 
    % - 2*n12*n13*n24*n34 - 2*n12*n13*n25*n35 - 2*n12*n14*n23*n34 
    % - 2*n12*n14*n25*n45 - 2*n12*n15*n23*n35 - 2*n12*n15*n24*n45 
    % + n13^2*n24^2 + n13^2*n25^2 + n13^2*n45^2  - 2*n13*n14*n23*n24 
    % - 2*n13*n14*n35*n45 - 2*n13*n15*n23*n25 - 2*n13*n15*n34*n45 
    % + n14^2*n23^2 + n14^2*n25^2 + n14^2*n35^2  - 2*n14*n15*n24*n25 - 2*n14*n15*n34*n35 
    % + n15^2*n23^2 + n15^2*n24^2 + n15^2*n34^2  + n23^2*n45^2  
    % - 2*n23*n24*n35*n45 - 2*n23*n25*n34*n45 
    % + n24^2*n35^2  - 2*n24*n25*n34*n35 
    % + n25^2*n34^2   

    % + 80
end